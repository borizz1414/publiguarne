// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
@import "../../app/theme/vars.scss";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$publiguarne-app-primary: mat-palette($mat-teal, 900);
$publiguarne-app-accent: mat-palette($mat-teal, 400);

// The warn palette is optional (defaults to red).
$publiguarne-app-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$publiguarne-app-theme: mat-light-theme(
  (
    color: (
      primary: $publiguarne-app-primary,
      accent: $publiguarne-app-accent,
      warn: $publiguarne-app-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($publiguarne-app-theme);


/* INPUTS ANIMATIONS */ 
input[type=text],input[type=password] {
  box-sizing: border-box;
  border: 1px solid #d4d4d4;
  -webkit-transition: 0.5s;
  transition: 0.5s;
  outline: none;
}

input[type=text]:focus,input[type=password]:focus {
  border: 1px solid #2d2d2d;
}

// STYLE INPUT CHECKBOX
input[type="checkbox"] {
  position: relative;
  cursor: pointer;
}
input[type="checkbox"]:before {
  content: "";
  display: block;
  position: absolute;
  width: 13px;
  height: 13px;
  top: 0;
  left: 0;
  border: 2px solid #d4d4d4;
  border-radius: 3px;
  background-color: white;
}
input[type="checkbox"]:checked:after {
  content: "";
  display: block;
  width: 4px;
  height: 7px;
  border: solid $secondary;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  position: absolute;
  top: 2px;
  left: 6px;
}