{"version":3,"sources":["./src/app/auth/components/change-password/change-password.component.ts","./src/app/auth/components/change-password/change-password.component.html","./src/app/auth/auth-routing.module.ts","./src/app/core/services/auth.service.ts","./src/app/auth/components/register-office/register-office.component.ts","./src/app/auth/components/register-office/register-office.component.html","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/auth/auth.module.ts","./src/app/auth/shared/auth-dialog/auth-dialog.component.ts","./src/app/auth/shared/auth-dialog/auth-dialog.component.html","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  form: FormGroup;\n  fieldTextType: any;\n  constructor(private fb: FormBuilder,\n              // tslint:disable-next-line: variable-name\n              private _auth: AuthService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm(): void{\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  login(): void{\n    this._auth.login(this.form).subscribe((resp: any) => {\n      // this.router.navigate(['/inicio/directorio']);\n    });\n    this.router.navigate(['/inicio/directorio']);\n\n  }\n  showPassword(): void{\n  this.fieldTextType = !this.fieldTextType;\n  }\n\n}\n","<div class=\"container-auth\">\n    <div class=\"row-container row center-xs middle-xs\">\n        <div class=\"col-xs-12 col-sm-7 col-md-6 col-lg-4\">\n            <div class=\"card\">\n                <mat-card-title>\n                    Cambiar contraseña\n                </mat-card-title>\n                <ng-container>\n                    <form [formGroup]=\"form\" (ngSubmit)=\"login()\" >\n                        <div class=\"form-control\">\n                            <label>Usuario ó correo electrónico *</label>\n                            <input class=\"input-login-root\" type=\"text\" formControlName=\"email\" required\n                                placeholder=\"Ingresa tu usuario ó correo electrónico\">\n                            <mat-error *ngIf=\"form.get('email').hasError('email') && form.get('email').touched\">Ingresa\n                                un email valido\n                            </mat-error>\n                            <mat-error *ngIf=\"form.get('email').hasError('required') && form.get('email').touched\">El\n                                email es obligatorio\n                            </mat-error>\n                        </div>\n                        <div class=\"form-control form-password\">\n                            <label>Nueva contraseña *</label>\n                            <div class=\"icon-input\">\n                                <span class=\"icon-eye-off\" (click)=\"showPassword()\"><img\n                                        src=\"assets/img/svg/icon-eye-off.svg\" alt=\"\"></span>\n                            </div>\n                            <input class=\"input-login-root\" formControlName=\"password\" required\n                                [type]=\"fieldTextType ? 'text' : 'password'\" placeholder=\"Ingresa tu contraseña\">\n                            <mat-error\n                                *ngIf=\"form.get('password').hasError('required') && form.get('password').touched\">La\n                                contraseña es obligatoria\n                            </mat-error>\n                        </div>\n                        <div class=\"form-control form-password\">\n                            <label>Repetir contraseña *</label>\n                            <div class=\"icon-input\">\n                                <span class=\"icon-eye-off\" (click)=\"showPassword()\"><img\n                                        src=\"assets/img/svg/icon-eye-off.svg\" alt=\"\"></span>\n                            </div>\n                            <input class=\"input-login-root\" formControlName=\"password\" required\n                                [type]=\"fieldTextType ? 'text' : 'password'\" placeholder=\"Ingresa tu contraseña\">\n                            <mat-error\n                                *ngIf=\"form.get('password').hasError('required') && form.get('password').touched\">La\n                                contraseña es obligatoria\n                            </mat-error>\n                        </div>\n                        <div class=\"submit\">\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!form.valid\"\n                                type=\"submit\">Ingresar</button>\n                        </div>\n                        <!-- <div>\n                            <pre>\n                {{form.status | json}}\n                {{form.value | json}}\n              </pre>\n                        </div> -->\n                    </form>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterOfficeComponent } from './components/register-office/register-office.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '',\n        component: LoginComponent,\n      },\n      // {\n      //   path: 'register-office',\n      //   component: RegisterOfficeComponent,\n      // },\n      {\n        path: 'registro',\n        component: RegisterComponent,\n      },\n      {\n        path: 'cambiar-contraseña',\n        component: ChangePasswordComponent,\n      },\n      {\n        path: '**',\n        redirectTo: '',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport {catchError, map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient,\n              private router: Router) {}\n\n  register(body): Observable<any> {\n    console.log(body);\n    return this.http.post<any>(`${environment.api_url}users`, body).pipe(\n      catchError(this.handleError),\n      map((resp: any) => this.router.navigate(['/auth/ingresar']))\n    );\n  }\n  login(body): Observable<any> {\n    return this.http.post<any>(`${environment.api_url}login`, body).pipe(\n      catchError(this.handleError),\n      map((resp: any) => {\n        const roles = resp.user.roles;\n        const response = {\n          message: resp.message,\n        };\n        roles.find((element) => this.setRole(element.id));\n\n        return resp.access_token === undefined\n          ? response\n          : (this.router.navigate(['/inicio/directorio']),\n            this.setToken(resp.access_token),\n            response);\n      })\n    );\n  }\n  changePassword(body): Observable<any> {\n    return this.http\n      .put<any>(`${environment.api_url}change-password`, body)\n      .pipe(\n        catchError(this.handleError),\n        map((resp: any) => resp)\n      );\n  }\n  private handleError(error: HttpErrorResponse): any {\n    console.log(error);\n    return throwError('Ha ocurrido un error');\n  }\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n  setToken(token): void {\n    localStorage.setItem('token', token);\n  }\n  setRole(role): void {\n    localStorage.setItem('role', role);\n  }\n  getRole(): string {\n    return localStorage.getItem('role');\n  }\n  getUser() {}\n  setUser(name) {}\n  setRoleUser(role) {}\n  getRoleUser() {}\n  AuthNavigate(route) {\n    // tslint:disable-next-line: curly\n    if (this.getToken !== null) this.router.navigate(['/' + route]);\n  }\n  logout(): void {\n    localStorage.clear();\n    this.router.navigate(['/auth/ingresar']);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register-office',\n  templateUrl: './register-office.component.html',\n  styleUrls: ['./register-office.component.scss']\n})\nexport class RegisterOfficeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-auth\">\n    <div class=\"row-container row center-xs middle-xs\">\n        <div class=\"col-xs-12 col-sm-7 col-md-6 col-lg-4\">\n            <div class=\"card\">\n                <mat-card-title>\n                    Registra tu oficina virtual\n                </mat-card-title>\n                <ng-container>\n                    <form class=\"form-login\">\n                        <div class=\"form-control\">\n                            <label for=\"\">Nombre completo *</label>\n                            <input type=\"text\" placeholder=\"Ingresa tu nombre completo\">\n                        </div>\n                        <div class=\"form-control\">\n                            <label for=\"\">Usuario ó correo electrónico *</label>\n                            <input type=\"text\" placeholder=\"Ingresa tu usuario ó correo electrónico\">\n                        </div>\n                        <div class=\"form-control\">\n                            <label for=\"\">Telefono *</label>\n                            <input type=\"tel\" placeholder=\"Ingresa tu número de teléfono\">\n                        </div>\n                        <div class=\"form-remember\">\n                            <div>\n                                <input type=\"checkbox\">\n                                <span>Acepto <b>las políticas de uso de datos y reglas del negocio.</b></span>\n                            </div>\n                        </div>\n                        <div class=\"submit\">\n                            <button mat-raised-button color=\"primary\">Registrarse</button>\n                        </div>\n                        <div class=\"register\">\n                            ¿Ya tienes una cuenta? <a [routerLink]=\"['/auth/login']\"\n                                routerLinkActive=\"router-link-active\">Ingresa</a>\n                        </div>\n                    </form>\n                    <div class=\"social-networks-login\">\n                        <div class=\"circle\">\n                            ó\n                        </div>\n                        <div class=\"social-text\">\n                            <p>Regístrate con tus plataformas sociales</p>\n                            <div class=\"social-icons\">\n                                <img src=\"assets/img/svg/google.svg\">\n                                <img src=\"assets/img/svg/facebook.svg\">\n                                <img src=\"assets/img/svg/instagram.svg\">\n                                <img src=\"assets/img/svg/twitter.svg\">\n                            </div>\n                            <div class=\"policy-text\">\n                                *Al registrarte con tus plataformas sociales estarás aceptando automáticamente nuestras\n                                políticas de uso de datos y reglas del negocio .\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  formLogin: FormGroup;\n  fieldTextType: any;\n  constructor(private fb: FormBuilder,\n              // tslint:disable-next-line: variable-name\n              private _auth: AuthService,\n              private router: Router) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n\n  buildForm(): void{\n    this.formLogin = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  login(): void{\n    this._auth.login(this.formLogin).subscribe((resp: any) => {\n      // this.router.navigate(['/inicio/directorio']);\n    });\n    this.router.navigate(['/inicio/directorio']);\n\n  }\n  showPassword(): void{\n  this.fieldTextType = !this.fieldTextType;\n  }\n}\n","<div class=\"container-auth\">\n    <div class=\"row-container row center-xs middle-xs\">\n        <div class=\"col-xs-12 col-sm-7 col-md-6 col-lg-4\">\n            <div class=\"card\" >\n                <mat-card-title>\n                    Iniciar sesión\n                </mat-card-title>\n                <ng-container >\n                    <form [formGroup]=\"formLogin\" (ngSubmit)=\"login()\">\n                        <div class=\"form-control\">\n                            <label>Usuario ó correo electrónico *</label>\n                            <input class=\"input-login-root\" type=\"text\" formControlName=\"email\" required\n                                placeholder=\"Ingresa tu usuario ó correo electrónico\">\n                            <mat-error\n                                *ngIf=\"formLogin.get('email').hasError('email') && formLogin.get('email').touched\">\n                                Ingresa un email valido\n                            </mat-error>\n                            <mat-error\n                                *ngIf=\"formLogin.get('email').hasError('required') && formLogin.get('email').touched\">El\n                                email es obligatorio\n                            </mat-error>\n                        </div>\n                        <div class=\"form-control form-password\">\n                            <label>Contraseña *</label>\n                            <div class=\"icon-input\">\n                                <span class=\"icon-eye-off\" (click)=\"showPassword()\"><img\n                                        src=\"assets/img/svg/icon-eye-off.svg\" alt=\"\"></span>\n                            </div>\n                            <input class=\"input-login-root\" formControlName=\"password\" required\n                                [type]=\"fieldTextType ? 'text' : 'password'\" placeholder=\"Ingresa tu contraseña\">\n                            <mat-error\n                                *ngIf=\"formLogin.get('password').hasError('required') && formLogin.get('password').touched\">\n                                La contraseña es obligatoria\n                            </mat-error>\n                        </div>\n                        <div class=\"form-remember\">\n                            <div>\n                                <input class=\"input-login-root\" type=\"checkbox\">\n                                <span>Recordar datos</span>\n                            </div>\n                            <div class=\"forgot-password\">\n                                <a color='primary' routerLink=\"/auth/cambiar-contraseña\">Olvidé mi contraseña</a>\n                            </div>\n                        </div>\n                        <div class=\"submit\">\n                            <button mat-raised-button color=\"primary\" [disabled]=\"!formLogin.valid\"\n                                type=\"submit\">Ingresar</button>\n                        </div>\n                        <!-- <div>\n                            <pre>\n                {{formLogin.status | json}}\n                {{formLogin.value | json}}\n              </pre>\n                        </div> -->\n                        <div class=\"register\">\n                            ¿Quieres ser parte de Publiguarne? <a [routerLink]=\"['/auth/registro']\"\n                                routerLinkActive=\"router-link-active\">Registrate</a>\n                        </div>\n                    </form>\n                    <div class=\"social-networks-login\">\n                        <div class=\"circle\">\n                            ó\n                        </div>\n                        <div class=\"social-text\">\n                            <p>Inicia sesión con tus plataformas sociales</p>\n                            <div class=\"social-icons\">\n                                <img src=\"assets/img/svg/google.svg\">\n                                <img src=\"assets/img/svg/facebook.svg\">\n                                <img src=\"assets/img/svg/twitter.svg\">\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { MaterialModule } from '../material/material.module';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { RegisterOfficeComponent } from './components/register-office/register-office.component';\nimport { AuthDialogComponent } from './shared/auth-dialog/auth-dialog.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, RegisterOfficeComponent, AuthDialogComponent, ChangePasswordComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FlexLayoutModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-auth-dialog',\n  templateUrl: './auth-dialog.component.html',\n  styleUrls: ['./auth-dialog.component.scss']\n})\nexport class AuthDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<AuthDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div *ngIf=\"data.content === 'policy'\" class=\"dialog\">\n    <mat-tab-group color='accent'>\n        <mat-tab label=\"Políticas de datos\">\n            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et\n        </mat-tab>\n        <mat-tab label=\"Reglas del negocio\">\n            Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et\n          \n        </mat-tab>\n    </mat-tab-group>\n<div class=\"button\">\n    <button mat-raised-button color='accent' (click)=\"onNoClick()\">Aceptar</button>\n</div>\n</div>\n\n<div *ngIf=\"data.content === 'success'\" class=\"dialog\">\n    <h2>¡Registro exitoso!</h2>\n    <p>Tu registro ha sido exitoso, en breves instantes serás contactado para terminar con el proceso de registro.</p>\n<div class=\"button\">\n    <button mat-raised-button color='accent' (click)=\"onNoClick()\">Continuar navegando en publiguarne</button>\n</div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AuthDialogComponent } from '../../shared/auth-dialog/auth-dialog.component';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { Router } from '@angular/router';\nimport { GoogleLoginProvider, SocialAuthService } from 'angularx-social-login';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  formRegister: FormGroup;\n  user: any;\n  constructor(\n    public dialog: MatDialog,\n    private fb: FormBuilder,\n    // tslint:disable-next-line: variable-name\n    private _auth: AuthService,\n    private router: Router,\n    private socialService: SocialAuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n  }\n  buildForm(): void {\n    this.formRegister = this.fb.group({\n      fullname: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n  register(): void {\n    const dialogRef = this.dialog.open(AuthDialogComponent, {\n      width: '462px',\n      data: { content: 'success' },\n      panelClass: 'custom-modal',\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log('The dialog was closed');\n      this.router.navigate(['/inicio/directorio']);\n    });\n  }\n  signInWithGoogle(): void {\n    this.socialService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    this.socialService.authState.subscribe((user) => {\n      this.user = user;\n      console.log(this.user);\n    });\n  }\n}\n","<div class=\"container-auth\">\n    <div class=\"row-container row center-xs middle-xs\">\n        <div class=\"col-xs-12 col-sm-7 col-md-6 col-lg-4\">\n            <div class=\"card\">\n                <mat-card-title>\n                    Regístrate en Publiguarne\n                </mat-card-title>\n                <ng-container>\n                    <form [formGroup]=\"formRegister\" (ngSubmit)=\"register()\" class=\"form-login\" >\n                        <div class=\"form-control\">\n                            <label>Nombre completo *</label>\n                            <input type=\"text\" formControlName=\"fullname\" class=\"input-login-root\"  placeholder=\"Ingresa tu nombre completo\">\n                            <mat-error *ngIf=\"formRegister.get('fullname').hasError('required') && formRegister.get('fullname').touched\">El nombre es obligatorio\n                            </mat-error>\n                        </div>\n                        <div class=\"form-control\">\n                            <label for=\"username\">Usuario ó correo electrónico *</label>\n                            <input type=\"text\" formControlName=\"email\" class=\"input-login-root\"  placeholder=\"Ingresa tu usuario ó correo electrónico\">\n                            <mat-error *ngIf=\"formRegister.get('email').hasError('required') && formRegister.get('email').touched\">El email es obligatorio\n                            </mat-error>\n                            <mat-error *ngIf=\"formRegister.get('email').hasError('email') && formRegister.get('email').touched\">Ingresa un email valido\n                            </mat-error>\n                        </div>\n                        <div class=\"form-control form-password\">\n                            <label for=\"password\">Contraseña *</label>\n                            <div class=\"icon-input\">\n                                <span class=\"icon-eye-off\"><img src=\"assets/img/svg/icon-eye-off.svg\" alt=\"\"></span>\n                            </div>\n                            <input type=\"password\" class=\"input-login-root\"  formControlName=\"password\" placeholder=\"Ingresa tu contraseña\">\n                            <mat-error *ngIf=\"formRegister.get('password').hasError('required') && formRegister.get('password').touched\">La contraseña es obligatoria\n                            </mat-error>\n                        </div>\n                        <div class=\"form-remember\">\n                            <div>\n                                <input type=\"checkbox\">\n                                <span>Acepto <b>las políticas de uso de datos y reglas del negocio.</b></span>\n                            </div>\n                        </div>\n                        <div class=\"submit\">\n                            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!formRegister.valid\">Registrarse</button>\n                        </div>\n                        <div class=\"register\">\n                            ¿Ya tienes una cuenta? <a [routerLink]=\"['/auth']\">Ingresa</a>\n                        </div>\n                    </form>\n                    <div class=\"social-networks-login\">\n                        <div class=\"circle\">\n                            ó\n                        </div>\n                        <div class=\"social-text\">\n                            <p>Regístrate con tus plataformas sociales</p>\n                            <div class=\"social-icons\">\n                                <img src=\"assets/img/svg/google.svg\" (click)=\"signInWithGoogle()\">\n                                <img src=\"assets/img/svg/facebook.svg\">\n                                <img src=\"assets/img/svg/twitter.svg\">\n                            </div>\n                            <div class=\"policy-text\">\n                                *Al registrarte con tus plataformas sociales estarás aceptando automáticamente nuestras\n                                políticas de uso de datos y reglas del negocio .\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n\n</div>"],"sourceRoot":"webpack:///"}